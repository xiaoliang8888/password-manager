// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 密码条目表 - 存储用户保存的各个网站的密码
model PasswordEntry {
  id        String   @id @default(cuid())
  website   String
  username  String
  password  String
  userId    String   // 关联到用户,每个密码属于一个用户
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId]) // 为用户ID创建索引,加快查询速度
}

// 用户表 - 存储用户的基本信息
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  password      String?         // 存储加密后的密码
  accounts      Account[]       // 用户可以有多个账户(比如Google登录、GitHub登录等)
  sessions      Session[]       // 用户可以有多个会话(比如在不同设备上登录)
  passwords     PasswordEntry[] // 用户保存的密码列表
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

// 账户表 - 用于第三方登录(如Google、GitHub等)
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

// 会话表 - 存储用户的登录会话信息
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

// 验证令牌表 - 用于邮箱验证、密码重置等功能
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
